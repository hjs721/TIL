# 박스 = 1
# 빈공간 = 0
# 좌표
# y, x = 2, 0
# 현재 좌표 아래에 박스가 없어야 한다
# if 박스_리스트[y + 1][x] != 박스:
# 조건 2
# 박스는 바닥을 벗어나면 안된다 -> 리스트의 범위를 벗어나면 안된다
# 리스트의 크기
# m x n
# m, n = 5, 4
# if y + 1 != m:
# 박스 = 1
# 빈공간 = 0
# 현재 좌표 : y, x = 2, 0
# 박스_리스트[y + 1][x] = 박스
# 박스_리스트[y][x] = 빈공간
# while 조건1 and 조건2(박스_리스트[y + 1][x] != 박스 and y + 1 != 행길이):
#     박스_리스트[y + 1][x] = 박스
#     박스_리스트[y][x] = 빈공간
#     y += 1

박스 = 1
빈공간 = 0

행_개수, 열_개수 = 5, 4

박스_리스트 =[
    [1, 0, 0, 0],
    [0, 0, 1, 0],
    [1, 0, 0, 1],
    [0, 1, 0, 0],
    [1, 0, 1, 0]
]
이동거리 = 0
# 이중 반복문
# 열부터 순회
for x in range(열_개수):
#행순회 단, 아래에서 위로 탐색
#4 -> 0 -1
    for y in reversed(range(행_개수)):
        # 만약에 현재 탐색하고(보고)있는 좌표에 박스가 있으면
        if 박스_리스트[y][x] == 박스:
            while y+1 != 행_개수 and 박스_리스트[y + 1][x] != 박스: # 범위체크 먼저 and 다른 조건(범위가 제일 중요함!)
            # # 조건1. 박스 아래에 박스가 없어야 한다.
            # if 박스_리스트[y + 1][x] != 박스:
            # # 조건2. 박스가 바닥을 벗어나면 안 된다.
            # # 즉 리스트의 범위를 벗어나면 안된다.
            # if y+1 != 행_개수:
                박스_리스트[y][x] = 빈공간
                박스_리스트[y + 1][x] = 박스
                y += 1
                이동거리 += 1
print(이동거리)