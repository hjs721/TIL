'''
델타 탐색 : 4방위 상하좌우
델타_y = [0, 0, 1, -1]
델타_x = [1, -1, 0, 0]
y, x = 1, 1
for d in range(4):
    탐색_y = y + 델타_y[d]
    탐색_x = x + 델타_x[d]
    print(탐색_y, 탐색_x)
    # 1, 2
    # 1, 0
    # 2, 1
    # 0, 1
8방위로 구한다면:
델타_y = [-1, -1, -1, 0, 0, 1, 1, 1]
델타_x = [-1, 0, 1,  -1, 1, -1, 0, 1]
y, x = 1, 3

for d in range(8):
    탐색_y = y + 델타_y[d]
    탐색_x = x + 델타_x[d]

    if 게임보드[탐색_y][탐색_x] == 지뢰:
        지뢰수 += 1
결과보드[y][x] = 지뢰수

if 게임보드[y][x] == 지뢰:
    지뢰_발견 = True
if 지뢰_발견 == True:
    결과보드에서 모든 지뢰위치에 * 저장
'''

n = int(input())

dy = [-1, -1, -1, 0, 0, 1, 1, 1]
dx = [-1, 0, 1,  -1, 1, -1, 0, 1]

게임보드 = [
    '...**..*',
    '......*.',
    '....*...',
    '........',
    '........',
    '.....*..',
    '...**.*.',
    '.....*..'
    ]

오픈보드 = [
    'xxx.....',
    'xxxx....',
    'xxxx....',
    'xxxxx...',
    'xxxxx...',
    'xxxxx...',
    'xxx.....',
    'xxxxx...'
    ]

# 빈 결과보드 생성
결과보드 = []
for i in range(8):
    temp = ['.'] * 8
    결과보드.append(temp)

지뢰 = '*'
빈공간 = '.'

게임보드 = list(게임보드)
오픈보드 = list(오픈보드)

지뢰_발견 = False

# 이중반복문
for y in range(n):
    for x in range(n):
        # 현재 위치가 오픈한 위치여야 함
        # 오픈보드 -> x
        if 오픈보드[y][x] == 'x':
            지뢰수 = 0
            for d in range(8): # 이건 8방위 탐색라 8
                탐색_y = y + dy[d]
                탐색_x = x + dx[d]
                # 탐색_y와 탐색_x의 범위는 리스트를 벗어나면 안된다
                # 리스트의 범위는 0~7(리스트의 길이가 8)
                if 0 <= 탐색_y <= 8 and 0<= 탐색_x <= 8:
                    if 게임보드[탐색_y][탐색_x] == 지뢰:
                        지뢰수 += 1

            결과보드 [y][x] = 지뢰수

            # 현재 오픈한 위치에 지뢰가 있는지 확인
            if 게임보드[y][x] == 지뢰:
                지뢰_발견 = True
# 지뢰를 발견했으면 모든 지뢰의 위치를 결과보드에 표시
if 지뢰_발견 == True:
    for y in range(n):
        for x in range(n):
            if 게임보드[y][x] == 지뢰:
                결과보드[y][x] = 지뢰

for row in 결과보드:
    print(*row, sep='')